import json
from goal import Goal
from datetime import datetime

class PiggyBank: #управление списком целей
    def __init__(self):
        self.goals = [] #список целей
        self.categories = ['Работа', 'Обучение', 'Путешествия', 'Здоровье', 'Развлечения', 'Другое']

    def add_goal(self, name, total_amount, category, date_target =None): #добавляем цель
        category = category.title()
        if category not in self.categories:
            category = 'Другое'
        if not date_target or date_target.strip() == "":
            parsed_date = None
        else:
            try:
                parsed_date = datetime.strptime(date_target, '%Y-%m-%d').date()
            except ValueError:
                print("Неверный формат даты. Цель будет создана без даты завершения.")
                parsed_date = None
        self.goals.append(Goal(name, total_amount, category, date_target=parsed_date))
        print(f'\nЦель "{name}" добавлена в категорию "{category}"')

    def remove_goal(self, name): #удаляем цель
        for i, goal in enumerate(self.goals):
            if goal.name == name:
                del self.goals[i]
                print(f'\nЦель "{name}" удалена.')
            else:
                print(f'\nЦель "{name}" не найдена.')

    def find_goal(self, name): #найти цель
        for goal in self.goals:
            if goal.name == name:
                return goal
        return None

    def overall_progress(self): #считаем общий прогресс
        if not self.goals:
            return 0
        overall_current = sum(g.current_balance for g in self.goals)
        total_sum = sum(g.total_amount for g in self.goals)
        return (overall_current / total_sum) * 100 if total_sum > 0 else 0


    def save_to_file(self, filename="goals_data.json"): #сохранить в файл json
        with open(filename, "w", encoding="utf-8", newline='') as f:
            json.dump([g.dict_goal() for g in self.goals], f, ensure_ascii=False, indent=4)
            print("\nДанные сохранены.")

    def load_from_file(self, filename="goals_data.json"):
        try:
            with open(filename, "r", encoding="utf-8") as f:
                data = json.load(f)
                self.goals = [Goal.from_dict(g) for g in data]
            print("\nДанные загружены.")
        except FileNotFoundError:
            print("\nФайл данных не найден. Загружена пустая копилка.")

    def show_goals(self): #список целей, статус, прогресс
        if not self.goals:
            print('\nЦелей пока нет.')
            return
        print('\nВаши цели:')
        for goal in self.goals:
            print(f"'{goal.name}' - Баланс цели:{goal.current_balance} из {goal.total_amount}")
            print(goal.remind_if_due())
            print(f'Статус цели: "{goal.status}". Выполнено: {goal.get_progress():.1f}%\n')
